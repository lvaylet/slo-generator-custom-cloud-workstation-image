name: Build image and push to Artifact Registry using Cloud Build

on:
  push:
    branches:
    - main

# TODO Convert some (all?) variables to secrets so they do not show up in logs?
env:
  PROJECT_ID: slo-generator-demo
  REGION: europe-west9
  IMAGE_NAME: code-oss-for-slo-generator
  WORKLOAD_IDENTITY_PROVIDER: projects/803140796435/locations/global/workloadIdentityPools/my-github-identity-pool/providers/my-github-identity-provider
  SERVICE_ACCOUNT_NAME: cloud-builder

jobs:
  cloud-build:
    name: Setup, Build, and Push with Cloud Build
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: read
      id-token: write

    steps:
    # Checkout MUST come before auth.
    - name: Checkout
      id: checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT_NAME }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
        token_format: access_token
        create_credentials_file: true
        access_token_lifetime: '100s'
    
    # Alternative option - authentication via credentials json.
#    - name: Authenticate to Google Cloud
#      id: auth
#      uses: google-github-actions/auth@v0
#      with:
#        credentials_json: ${{ secrets.RUN_SA_KEY }}

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
    
    # Only when `create_credentials_file` is `true`.
    - name: Authenticate using credentials file
      run: gcloud auth login --cred-file ${{ steps.auth.outputs.credentials_file_path }}

    # The actual name of the SA might be redacted as *** as GitHub recognizes it as a secret.
    - name: Confirm we are indeed authenticated
      run: gcloud auth list

    - name: Build image and push to Artifact Registry
      run: |-
        gcloud builds submit \
          --quiet \
          --tag "${REGION}-docker.pkg.dev/${PROJECT_ID}/docker/${IMAGE_NAME}:${GITHUB_SHA}"
